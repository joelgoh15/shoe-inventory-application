#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portfolio3_2.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShoeInventoryDB")]
	public partial class ShoeInventoryDBDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShoeInventoryTable(ShoeInventoryTable instance);
    partial void UpdateShoeInventoryTable(ShoeInventoryTable instance);
    partial void DeleteShoeInventoryTable(ShoeInventoryTable instance);
        #endregion

        //created
        public ShoeInventoryDBDataClassesDataContext() : base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShoeInventoryDBConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }


        public ShoeInventoryDBDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoeInventoryDBDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoeInventoryDBDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoeInventoryDBDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ShoeInventoryTable> ShoeInventoryTables
		{
			get
			{
				return this.GetTable<ShoeInventoryTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoeInventoryTable")]
	public partial class ShoeInventoryTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ShoeName;
		
		private string _ShoeDescription;
		
		private string _ShoePrice;
		
		private System.Nullable<int> _ShoeSize;
		
		private System.Nullable<int> _Quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShoeNameChanging(string value);
    partial void OnShoeNameChanged();
    partial void OnShoeDescriptionChanging(string value);
    partial void OnShoeDescriptionChanged();
    partial void OnShoePriceChanging(string value);
    partial void OnShoePriceChanged();
    partial void OnShoeSizeChanging(System.Nullable<int> value);
    partial void OnShoeSizeChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public ShoeInventoryTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoeName", DbType="VarChar(50)")]
		public string ShoeName
		{
			get
			{
				return this._ShoeName;
			}
			set
			{
				if ((this._ShoeName != value))
				{
					this.OnShoeNameChanging(value);
					this.SendPropertyChanging();
					this._ShoeName = value;
					this.SendPropertyChanged("ShoeName");
					this.OnShoeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoeDescription", DbType="VarChar(50)")]
		public string ShoeDescription
		{
			get
			{
				return this._ShoeDescription;
			}
			set
			{
				if ((this._ShoeDescription != value))
				{
					this.OnShoeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShoeDescription = value;
					this.SendPropertyChanged("ShoeDescription");
					this.OnShoeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoePrice", DbType="VarChar(50)")]
		public string ShoePrice
		{
			get
			{
				return this._ShoePrice;
			}
			set
			{
				if ((this._ShoePrice != value))
				{
					this.OnShoePriceChanging(value);
					this.SendPropertyChanging();
					this._ShoePrice = value;
					this.SendPropertyChanged("ShoePrice");
					this.OnShoePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoeSize", DbType="Int")]
		public System.Nullable<int> ShoeSize
		{
			get
			{
				return this._ShoeSize;
			}
			set
			{
				if ((this._ShoeSize != value))
				{
					this.OnShoeSizeChanging(value);
					this.SendPropertyChanging();
					this._ShoeSize = value;
					this.SendPropertyChanged("ShoeSize");
					this.OnShoeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
